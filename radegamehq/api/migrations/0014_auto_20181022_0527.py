# Generated by Django 2.1.1 on 2018-10-22 05:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0013_auto_20181021_0955'),
    ]

    operations = [
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='phase_images')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='pool_images')),
                ('mode', models.TextField(choices=[('DRAW', 'DRAW'), ('TRIGGER', 'TRIGGER')], default='DRAW')),
                ('pick', models.CharField(choices=[('RANDOM', 'RANDOM'), ('CHOICE', 'CHOICE')], default='RANDOM', max_length=255)),
                ('quota', models.CharField(choices=[('REPEATING', 'REPEATING'), ('ONCE', 'ONCE')], default='REPEATING', max_length=255)),
                ('min_cap', models.IntegerField(blank=True, null=True)),
                ('max_cap', models.IntegerField(blank=True, null=True)),
                ('random_cap', models.BooleanField(default=False)),
                ('allow_same_pick', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PoolItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota', models.IntegerField(default=1)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Action')),
                ('condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Condition')),
                ('cost', models.ManyToManyField(related_name='pool_item_cost', to='api.EffectStack')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Pool')),
                ('restriction', models.ManyToManyField(related_name='pool_item_restriction', to='api.EffectStack')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='token_images')),
                ('name', models.CharField(max_length=255)),
                ('action_limit', models.IntegerField(blank=True, null=True)),
                ('resource_limit', models.IntegerField(blank=True, null=True)),
                ('effect_pool', models.ManyToManyField(related_name='token_effect_pool', to='api.Pool')),
            ],
        ),
        migrations.RemoveField(
            model_name='effectgroup',
            name='game',
        ),
        migrations.RemoveField(
            model_name='effectgroupitem',
            name='action',
        ),
        migrations.RemoveField(
            model_name='effectgroupitem',
            name='condition',
        ),
        migrations.RemoveField(
            model_name='effectgroupitem',
            name='cost',
        ),
        migrations.RemoveField(
            model_name='effectgroupitem',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='effectgroupitem',
            name='restriction',
        ),
        migrations.RenameField(
            model_name='faction',
            old_name='activity_limit',
            new_name='action_limit',
        ),
        migrations.RemoveField(
            model_name='faction',
            name='start',
        ),
        migrations.AlterField(
            model_name='faction',
            name='effect_pool',
            field=models.ManyToManyField(related_name='faction_effect_pool', to='api.Pool'),
        ),
        migrations.AlterField(
            model_name='faction',
            name='image',
            field=models.FileField(blank=True, null=True, upload_to='faction_images'),
        ),
        migrations.AlterField(
            model_name='field',
            name='effect_pool',
            field=models.ManyToManyField(related_name='field_effect_pool', to='api.Pool'),
        ),
        migrations.AlterField(
            model_name='round',
            name='effect_pool',
            field=models.ManyToManyField(related_name='round_effect_pool', to='api.Pool'),
        ),
        migrations.AlterField(
            model_name='round',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='round_images'),
        ),
        migrations.DeleteModel(
            name='EffectGroup',
        ),
        migrations.DeleteModel(
            name='EffectGroupItem',
        ),
        migrations.AddField(
            model_name='token',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Faction'),
        ),
        migrations.AddField(
            model_name='token',
            name='start',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Location'),
        ),
        migrations.AddField(
            model_name='phase',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
    ]
