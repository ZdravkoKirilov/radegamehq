# Generated by Django 2.1.1 on 2018-11-02 07:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api_auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='action_images')),
                ('mode', models.CharField(choices=[('TRAP', 'TRAP'), ('TRIGGER', 'TRIGGER'), ('HYBRID', 'HYBRID'), ('AUTO', 'AUTO')], default='TRAP', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActionConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MOVE', 'MOVE'), ('WIN_GAME', 'WIN_GAME'), ('LOSE_GAME', 'LOSE_GAME'), ('ALTER_RESOURCE', 'ALTER_RESOURCE'), ('DRAW', 'DRAW'), ('REDIRECT', 'REDIRECT'), ('DROP', 'DROP'), ('LOAD', 'LOAD'), ('GAMBLE', 'GAMBLE'), ('ALTER_KEYWORDS', 'ALTER_KEYWORDS')], max_length=255)),
                ('target', models.CharField(choices=[('PLAYER', 'PLAYER'), ('OTHER_PLAYER', 'OTHER_PLAYER'), ('SELF', 'SELF'), ('ACTIVE_PLAYER', 'ACTIVE_PLAYER'), ('FACTION', 'FACTION'), ('KEYWORD', 'KEYWORD'), ('TOKEN', 'TOKEN'), ('ACTIVE_TOKEN', 'ACTIVE_TOKEN'), ('OTHER_TOKEN', 'OTHER_TOKEN')], max_length=255)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('max_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('min_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_config_action', to='api.Action')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='choice_images')),
                ('mode', models.CharField(choices=[('TRAP', 'TRAP'), ('TRIGGER', 'TRIGGER'), ('HYBRID', 'HYBRID'), ('AUTO', 'AUTO')], default='TRAP', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChoiceOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='choice_option_images')),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to='condition_images')),
                ('mode', models.CharField(choices=[('TRAP', 'TRAP'), ('TRIGGER', 'TRIGGER'), ('HYBRID', 'HYBRID'), ('PASSIVE', 'PASSIVE'), ('AUTO', 'AUTO')], default='TRIGGER', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConditionClause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CLAIM', 'CLAIM'), ('REACH', 'REACH'), ('MEET', 'MEET'), ('AVOID', 'AVOID'), ('COMPLETE', 'COMPLETE'), ('PLAY', 'PLAY'), ('PLAY_MAX', 'PLAY_MAX'), ('HAVE', 'HAVE'), ('HAVE_MAX', 'HAVE_MAX'), ('HAVE_MORE', 'HAVE_MORE'), ('HAVE_LESS', 'HAVE_LESS'), ('IS', 'IS'), ('IS_BEFORE', 'IS_BEFORE'), ('IS_AFTER', 'IS_AFTER')], max_length=255)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('relation', models.TextField(choices=[('AND', 'AND'), ('OR', 'OR'), ('NOT', 'NOT')], default='AND')),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Action')),
                ('choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Choice')),
                ('condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clause_condition', to='api.Condition')),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='faction_images')),
                ('type', models.CharField(choices=[('PLAYER', 'PLAYER'), ('BOT', 'BOT')], default='PLAYER', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.FileField(blank=True, max_length=255, null=True, upload_to='field_images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to='game_images')),
                ('min_players', models.IntegerField(blank=True, null=True)),
                ('max_players', models.IntegerField(blank=True, null=True)),
                ('recommended_age', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_teams', models.BooleanField(default=False)),
                ('round_cycles', models.IntegerField(blank=True, null=True)),
                ('round_order', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_auth.AppUser')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Field')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_loc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_from_loc', to='api.Location')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='phase_images')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='pool_images')),
                ('mode', models.TextField(choices=[('DRAW', 'DRAW'), ('TRIGGER', 'TRIGGER')], default='DRAW')),
                ('pick', models.CharField(choices=[('RANDOM', 'RANDOM'), ('CHOICE', 'CHOICE')], default='RANDOM', max_length=255)),
                ('quota', models.CharField(choices=[('REPEATING', 'REPEATING'), ('ONCE', 'ONCE')], default='REPEATING', max_length=255)),
                ('min_cap', models.IntegerField(blank=True, null=True)),
                ('max_cap', models.IntegerField(blank=True, null=True)),
                ('random_cap', models.BooleanField(default=False)),
                ('allow_same_pick', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PoolItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota', models.IntegerField(default=1)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Action')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.FileField(blank=True, max_length=255, null=True, upload_to='resource_images')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='round_images')),
                ('replay_count', models.IntegerField(blank=True, null=True)),
                ('repeat', models.IntegerField(blank=True, null=True)),
                ('phase_order', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='stack_images')),
                ('pick', models.CharField(choices=[('RANDOM', 'RANDOM'), ('CHOICE', 'CHOICE')], default='RANDOM', max_length=255)),
                ('quota', models.CharField(choices=[('REPEATING', 'REPEATING'), ('ONCE', 'ONCE')], default='REPEATING', max_length=255)),
                ('mode', models.CharField(choices=[('PICK', 'PICK'), ('AUTO', 'AUTO')], default='PICK', max_length=255)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StackItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, default=1, null=True)),
                ('max_amount', models.IntegerField(blank=True, null=True)),
                ('min_amount', models.IntegerField(blank=True, null=True)),
                ('relation', models.TextField(choices=[('AND', 'AND'), ('OR', 'OR'), ('NOT', 'NOT')], default='AND')),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Action')),
                ('choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Choice')),
                ('condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Condition')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stack_owner', to='api.Stack')),
                ('resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.FileField(blank=True, max_length=255, null=True, upload_to='stage_images')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='team_images')),
                ('min_players', models.IntegerField(default=1)),
                ('max_players', models.IntegerField(default=1)),
                ('effect_pool', models.ManyToManyField(blank=True, related_name='team_effect_pool', to='api.Pool')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
                ('income', models.ManyToManyField(blank=True, to='api.Stack')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='token_images')),
                ('allowed', models.ManyToManyField(blank=True, related_name='token_allowed', to='api.Condition')),
                ('effect_pool', models.ManyToManyField(blank=True, related_name='token_effect_pool', to='api.Pool')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
                ('income', models.ManyToManyField(blank=True, related_name='token_income', to='api.Stack')),
                ('restricted', models.ManyToManyField(blank=True, related_name='token_restricted', to='api.Condition')),
                ('start', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='stackitem',
            name='token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Token'),
        ),
        migrations.AddField(
            model_name='round',
            name='award',
            field=models.ManyToManyField(related_name='round_award', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='round',
            name='condition',
            field=models.ManyToManyField(related_name='round_condition', to='api.Condition'),
        ),
        migrations.AddField(
            model_name='round',
            name='effect_pool',
            field=models.ManyToManyField(related_name='round_effect_pool', to='api.Pool'),
        ),
        migrations.AddField(
            model_name='round',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game'),
        ),
        migrations.AddField(
            model_name='round',
            name='income',
            field=models.ManyToManyField(related_name='round_income', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='round',
            name='penalty',
            field=models.ManyToManyField(related_name='round_penalty', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='round',
            name='phases',
            field=models.ManyToManyField(related_name='round_phases', to='api.Phase'),
        ),
        migrations.AddField(
            model_name='round',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='round_stage', to='api.Stage'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='allowed',
            field=models.ManyToManyField(related_name='pool_item_allowed', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='choice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Choice'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Condition'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='cost',
            field=models.ManyToManyField(related_name='pool_item_cost', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.Pool'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Resource'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='restricted',
            field=models.ManyToManyField(related_name='pool_item_restricted', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='poolitem',
            name='token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Token'),
        ),
        migrations.AddField(
            model_name='path',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Stage'),
        ),
        migrations.AddField(
            model_name='path',
            name='to_loc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_to_loc', to='api.Location'),
        ),
        migrations.AddField(
            model_name='location',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Stage'),
        ),
        migrations.AddField(
            model_name='field',
            name='award',
            field=models.ManyToManyField(blank=True, related_name='field_award', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='field',
            name='cost',
            field=models.ManyToManyField(blank=True, related_name='field_cost', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='field',
            name='effect_pool',
            field=models.ManyToManyField(blank=True, related_name='field_effect_pool', to='api.Pool'),
        ),
        migrations.AddField(
            model_name='field',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game'),
        ),
        migrations.AddField(
            model_name='field',
            name='income',
            field=models.ManyToManyField(blank=True, related_name='field_income', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='field',
            name='penalty',
            field=models.ManyToManyField(blank=True, related_name='field_penalty', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='faction',
            name='effect_pool',
            field=models.ManyToManyField(blank=True, related_name='faction_effect_pool', to='api.Pool'),
        ),
        migrations.AddField(
            model_name='faction',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game'),
        ),
        migrations.AddField(
            model_name='faction',
            name='income',
            field=models.ManyToManyField(blank=True, to='api.Stack'),
        ),
        migrations.AddField(
            model_name='conditionclause',
            name='faction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Faction'),
        ),
        migrations.AddField(
            model_name='conditionclause',
            name='field',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Field'),
        ),
        migrations.AddField(
            model_name='conditionclause',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clauses', to='api.Condition'),
        ),
        migrations.AddField(
            model_name='conditionclause',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Resource'),
        ),
        migrations.AddField(
            model_name='conditionclause',
            name='round',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Round'),
        ),
        migrations.AddField(
            model_name='conditionclause',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Stage'),
        ),
        migrations.AddField(
            model_name='conditionclause',
            name='token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Token'),
        ),
        migrations.AddField(
            model_name='condition',
            name='allowed',
            field=models.ManyToManyField(blank=True, related_name='condition_allowed', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='condition',
            name='award',
            field=models.ManyToManyField(blank=True, related_name='condition_award', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='condition',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game'),
        ),
        migrations.AddField(
            model_name='condition',
            name='penalty',
            field=models.ManyToManyField(blank=True, related_name='condition_penalty', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='condition',
            name='restricted',
            field=models.ManyToManyField(blank=True, related_name='condition_restricted', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='condition',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Stage'),
        ),
        migrations.AddField(
            model_name='choiceoption',
            name='effect',
            field=models.ManyToManyField(to='api.Stack'),
        ),
        migrations.AddField(
            model_name='choiceoption',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='options', to='api.Choice'),
        ),
        migrations.AddField(
            model_name='choice',
            name='allowed',
            field=models.ManyToManyField(blank=True, related_name='choice_allowed', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='choice',
            name='condition',
            field=models.ManyToManyField(blank=True, related_name='choice_condition', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='choice',
            name='cost',
            field=models.ManyToManyField(blank=True, related_name='choice_cost', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='choice',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game'),
        ),
        migrations.AddField(
            model_name='choice',
            name='restricted',
            field=models.ManyToManyField(blank=True, related_name='choice_restricted', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='actionconfig',
            name='choice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Choice'),
        ),
        migrations.AddField(
            model_name='actionconfig',
            name='condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Condition'),
        ),
        migrations.AddField(
            model_name='actionconfig',
            name='faction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Faction'),
        ),
        migrations.AddField(
            model_name='actionconfig',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configs', to='api.Action'),
        ),
        migrations.AddField(
            model_name='actionconfig',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Resource'),
        ),
        migrations.AddField(
            model_name='actionconfig',
            name='token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Token'),
        ),
        migrations.AddField(
            model_name='action',
            name='allowed',
            field=models.ManyToManyField(blank=True, related_name='action_allowed', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='action',
            name='condition',
            field=models.ManyToManyField(blank=True, related_name='action_condition', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='action',
            name='cost',
            field=models.ManyToManyField(blank=True, related_name='action_cost', to='api.Stack'),
        ),
        migrations.AddField(
            model_name='action',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game'),
        ),
        migrations.AddField(
            model_name='action',
            name='restricted',
            field=models.ManyToManyField(blank=True, related_name='action_restricted', to='api.Stack'),
        ),
    ]
